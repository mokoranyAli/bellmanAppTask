//
//  homePresenter.swift
//  BellmanAppTask
//
//  Created Mohamed Korany Ali on 1/26/20.
//  Copyright © 2020 Mohamed Korany Ali. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class homePresenter: homePresenterProtocol, homeInteractorOutputProtocol {
    private var allItems : [[Item]] = [[Item]]()
    
    func placesFetchedSuccessfully(places: [[Item]]) {
        view?.hideLoadingIndicator()
        self.allItems.append(contentsOf: places)
        view?.reloadData()
    }
    
    func placesFetchingFailed() {
        view?.hideLoadingIndicator()
        //Failure - Should show alert
        print("Error is happening")
    }
    
    
    
    var numberOfRows: Int {
        return allItems.count
    }
    
    func viewDidload() {
        view?.showLoadingIndicator()
        interactor?.getPlaces()
    }
    
    func configure(cell: HomeTableCellView, indexPath: IndexPath) {
        let collectionItems = allItems[indexPath.row]

        cell.configure(placeDTO: collectionItems)
       // cell.reloadData()

    }
    
    
    
    
    

    weak internal var view: homeViewProtocol?
    var interactor: homeInteractorInputProtocol?
    private let router: homeWireframeProtocol

    init(interface: homeViewProtocol, interactor: homeInteractorInputProtocol?, router: homeWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}
